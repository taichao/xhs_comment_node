var http = require( 'http' );
var querystring = require( 'querystring' );
var qs = require( 'qs' );
var host = require( '../../config/host.config.json' );


var remoteLimitTime = host.timeout;



function remote( req , res , params  , callBack){
	var rdata = {};

    var dateTime = new Date;

    var len = 0;

    for(var key in params){
        len++;
    }

    for(var key in params){

        params[key].method = params[key].method != 'undefined' && params[key].method != '' ? params[key].method : 'GET';

        params[key].data = params[key].data != 'undefined' ? params[key].data : '';

        api( params[key].url , params[key].method.toUpperCase() , params[key].data , key , function(remoteRes , remoteData  , key ){

            len--;
			try{
				console.log(remoteData);
				rdata[key] = JSON.parse(remoteData);
			}catch(e){
				console.log(e);	
			}

            console.log('request http://%s%s:%d time: %d ms' , host.host , params[key].url , host.port ,new Date - dateTime);
            if(len == 0){

                console.log('request all time: %d ms' , new Date - dateTime);

                callBack(rdata);
            }
        });
    }


    function api(url , method , data , key , remoteCallBack){

        var headers = req.headers;

        var data = qs.stringify(data , { arrayFormat: 'indices' });
		console.log(data);

        if(!method){
            method = 'GET';
        }
        if(method == 'GET'){
            if(data){
                url += (url.indexOf('?')>0 ? '&' : '?') + data;
                data = '';
            }
        }else{
            headers['Content-Type'] =  'application/x-www-form-urlencoded';
        }
        headers['Content-Length'] = data.length;

        var options = {
            hostname	:	host.host,
            port		:	host.port,
            path		:	url,
            method		:	method,
            headers		:	headers
        }


        var remoteTimer;
        var apiReq = http.request(options, function(remoteRes) {

            var dateTime = new Date;

            clearTimeout(remoteTimer);

            var remoteState = remoteRes.statusCode;

            remoteRes.setEncoding('utf8');
            var remoteData = '';
            remoteRes.on('data', function (chunk, err) {
                if( err ) {
                    console.error( '请求数据失败' );
                    return;
                }
                remoteData += chunk;
            }).on('end' , function(){

                remoteCallBack( remoteRes , remoteData , key);
            });
        });

        apiReq.on('error', function(e){
            console.log("auth_user error: " + e.message);
        });

        remoteTimer = setTimeout(function(){
            apiReq.abort();
        } , remoteLimitTime);

        apiReq.write( data );

        apiReq.end();
    }


}


module.exports = remote;
